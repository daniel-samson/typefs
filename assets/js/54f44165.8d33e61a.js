(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(3),i=n(7),s=(n(0),n(110)),o={title:"Installation",sidebar_label:"Installation",slug:"/"},r={unversionedId:"getting-started/installation",id:"getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"Meet Type FS",source:"@site/docs/getting-started/installation.md",slug:"/",permalink:"/typefs/docs/",editUrl:"https://github.com/daniel-samson/typefs/edit/documentation/docs/getting-started/installation.md",version:"current",sidebar_label:"Installation",sidebar:"docs",next:{title:"Join in",permalink:"/typefs/docs/contributing/join"}},l=[{value:"Meet Type FS",id:"meet-type-fs",children:[]},{value:"Setting up your environment",id:"setting-up-your-environment",children:[{value:"Installation",id:"installation",children:[]},{value:"Configure",id:"configure",children:[]},{value:"Usage Example",id:"usage-example",children:[]}]}],p={toc:l};function c(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"meet-type-fs"},"Meet Type FS"),Object(s.b)("p",null,"A file storage package that provides a single interface to many types of filesystems."),Object(s.b)("h2",{id:"setting-up-your-environment"},"Setting up your environment"),Object(s.b)("h3",{id:"installation"},"Installation"),Object(s.b)("p",null,"Install type fs using npm:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-bash"},"npm install typefs\n")),Object(s.b)("h3",{id:"configure"},"Configure"),Object(s.b)("p",null,"Configure the Storage manger by editing your project entry file eg. index.js, index.ts, app.js, app.ts:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"// index.ts\nimport { Storage, Configuration } from 'typefs;\n\nStorage.config: Configuration = {\n    default: 'assets',\n    disks: {\n        app: {\n            driver: 'file',\n            root: '/app/',\n            jail: true,\n        }\n        assets: {\n            driver: 'file',\n            root: '/app/public/assets/'\n            jail: true,\n        }\n    }\n}\n")),Object(s.b)("h3",{id:"usage-example"},"Usage Example"),Object(s.b)("p",null,"Use Storage manager to manipulate your disks (file systems)"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"import { Storage } from 'typefs;\n\nasync function doFoo() {\n    const path = 'file.txt';\n    const content = Buffer.from('hello world');\n    await Storage.disk('assets').write(path, content);\n}\n")))}c.isMDXComponent=!0}}]);