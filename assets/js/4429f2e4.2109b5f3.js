"use strict";(self.webpackChunktypefs_docs=self.webpackChunktypefs_docs||[]).push([[1203],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},f="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,u=f["".concat(s,".").concat(m)]||f[m]||d[m]||o;return r?n.createElement(u,l(l({ref:t},p),{},{components:r})):n.createElement(u,l({ref:t},p))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[f]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9875:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={title:"How to read files",sidebar_label:"Read files"},l=void 0,i={unversionedId:"how-to/read-files",id:"how-to/read-files",title:"How to read files",description:"Use the storage manager to read files from a disk.",source:"@site/docs/how-to/read-files.md",sourceDirName:"how-to",slug:"/how-to/read-files",permalink:"/docs/how-to/read-files",draft:!1,editUrl:"https://github.com/daniel-samson/typefs/edit/documentation/docs/how-to/read-files.md",tags:[],version:"current",frontMatter:{title:"How to read files",sidebar_label:"Read files"},sidebar:"docs",previous:{title:"Write files",permalink:"/docs/how-to/write-files"},next:{title:"Bulk Rename files",permalink:"/docs/how-to/bulk-rename-files"}},s={},c=[{value:"Small Files",id:"small-files",level:3},{value:"Large File",id:"large-file",level:3},{value:"Example",id:"example",level:3}],p={toc:c};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Use the ",(0,a.kt)("a",{parentName:"p",href:"https://daniel-samson.github.io/typefs/docs/api/storage"},"storage manager")," to read files from a disk."),(0,a.kt)("h3",{id:"small-files"},"Small Files"),(0,a.kt)("p",null,"The ",(0,a.kt)("strong",{parentName:"p"},"read()")," method is ideal for reading small files (less than 10KB):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Storage } from 'typefs;\n\nasync function readFile() {\n    const path = 'file.txt';\n    const content = await Storage.disk('assets').read(path);\n}\n")),(0,a.kt)("h3",{id:"large-file"},"Large File"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"readStream()")," is a more memory efficient method, as it can read large files in chunks:"),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Storage } from "typefs";\nasync function readLargeFile() {\n  const fileStream = await Storage.disk("tmp").readStream("video.mp4");\n}\n')))}f.isMDXComponent=!0}}]);